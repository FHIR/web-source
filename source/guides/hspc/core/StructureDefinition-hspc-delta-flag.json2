{
  "resourceType": "StructureDefinition",
  "id": "hspc-delta-flag",
  "url": "http://fhir.org/guides/hspc/StructureDefinition/hspc-delta-flag",
  "name": "HSPC DeltaFlag Extension",
  "display": "HSPC DeltaFlag Extension",
  "status": "draft",
  "publisher": "HSPC",
  "contact": [
    {
      "telecom": [
        {
          "system": "other",
          "value": "http://healthcaresoa.org"
        }
      ]
    }
  ],
  "date": "2015-02-18",
  "description": "Takes a value from the valueset listed in the model to indicate the data value in the containing model is a change from a previous instance of the same model.",
  "fhirVersion": "1.5.0",
  "mapping": [
    {
      "identity": "rim",
      "uri": "http://hl7.org/v3",
      "name": "RIM Mapping"
    }
  ],
  "kind": "complex-type",
  "abstract": false,
  "contextType": "resource",
  "context": [
    "Observation"
  ],
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "Extension:delta-flag",
        "path": "Extension",
        "name": "delta-flag",
        "short": "Extension",
        "definition": "Takes a value from the valueset listed in the model to indicate the data value in the containing model is a change from a previous instance of the same model.",
        "comments": "This model is intended to constrain values from OBX-8 in a lab result HL7 message. Because OBX-8 is overloaded to contain multiple types of data, we need a way to tell which kind of code is sent (abnormal flag, delta flag, or ordinal interpretation.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "xpath": "exists(f:extension)!=exists(f:*[starts-with(local-name(.), 'value')])"
          }
        ],
        "isModifier": false,
        "mapping": [
          {
            "identity": "cdl.key",
            "map": "DeltaFlag_KEY_ECID"
          }
        ]
      },
      {
        "id": "Extension:delta-flag.id",
        "path": "Extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension:delta-flag.extension",
        "path": "Extension.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comments": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension:delta-flag.url",
        "path": "Extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comments": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "fixedUri": "http://fhir.org/guides/hspc/StructureDefinition/hspc-delta-flag",
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension:delta-flag.valueCode",
        "path": "Extension.valueCode",
        "short": "Primitive Type code",
        "definition": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code",
            "profile": "http://hl7.org/fhir/StructureDefinition/code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "Indicates that the data value in the containing model is a change from a previous instance of the same model",
          "valueSetReference": {
            "reference": "ValueSet/DeltaFlag"
          }
        }
      }
    ]
  },
  "differential": {
    "element": [
      {
        "id": "Extension:delta-flag",
        "path": "Extension",
        "name": "delta-flag",
        "definition": "Takes a value from the valueset listed in the model to indicate the data value in the containing model is a change from a previous instance of the same model.",
        "comments": "This model is intended to constrain values from OBX-8 in a lab result HL7 message. Because OBX-8 is overloaded to contain multiple types of data, we need a way to tell which kind of code is sent (abnormal flag, delta flag, or ordinal interpretation.",
        "min": 0,
        "max": "1",
        "isModifier": false,
        "mapping": [
          {
            "identity": "cdl.key",
            "map": "DeltaFlag_KEY_ECID"
          }
        ]
      },
      {
        "id": "Extension:delta-flag.url",
        "path": "Extension.url",
        "fixedUri": "http://fhir.org/guides/hspc/StructureDefinition/hspc-delta-flag"
      },
      {
        "id": "Extension:delta-flag.value[x]",
        "path": "Extension.value[x]",
        "type": [
          {
            "code": "code",
            "profile": "http://hl7.org/fhir/StructureDefinition/code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "Indicates that the data value in the containing model is a change from a previous instance of the same model",
          "valueSetReference": {
            "reference": "ValueSet/DeltaFlag"
          }
        }
      }
    ]
  }
}